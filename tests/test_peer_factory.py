from unittest import TestCase
from factories.peer_factory import get_peers


class PeerFactoryTestCase(TestCase):

    def test_get_peers(self):
        received_data = [{'exten': '104', 'peername': 'SIP/IP-104-IJ8vP', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '104', 'peername': 'SIP/IP-104-7QmO5', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '105', 'peername': 'SIP/IP-105-rrPi8', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '105', 'peername': 'SIP/IP-105-3RhNF', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '106', 'peername': 'SIP/IP-106-Y6NcH', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '106', 'peername': 'SIP/IP-106-HhV1H', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '107', 'peername': 'SIP/IP-107-s7TbL', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '107', 'peername': 'SIP/IP-107-RLZp1', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '100', 'peername': 'SIP/IP-100-CdFaT', 'state': 'Idle', 'presence': 'not_set', 'watchers': 0}, {'exten': '100', 'peername': 'SIP/IP-100-boazN', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '101', 'peername': 'SIP/IP-101', 'state': 'Idle', 'presence': 'not_set', 'watchers': 0}, {'exten': '102', 'peername': 'SIP/IP-102-wlJsG', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '103', 'peername': 'SIP/IP-103-DFiZ3', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '103', 'peername': 'SIP/IP-103-Hdqsq', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '108', 'peername': 'SIP/IP-108-RIIuq', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '109', 'peername': 'SIP/IP-109', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '109', 'peername': 'SIP/IP-109-fiMZ4', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '201', 'peername': 'SIP/IP-101-Iathq', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '1000', 'peername': 'SIP/1000', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '1001', 'peername': 'SIP/1001', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '1234', 'peername': 'SIP/1234', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}, {'exten': '7444', 'peername': 'SIP/IPHmfsz', 'state': 'Unavailable', 'presence': 'not_set', 'watchers': 0}]
        entities = get_peers(received_data)
        self.assertEqual(len(entities), 22)